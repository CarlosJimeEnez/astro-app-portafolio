---
import { Sun, Moon } from "lucide-react";
import { Button } from "@/components/ui/button";
---

<button
  id="theme-toggle"
  aria-label="Toggle theme"
  class="p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-primary transition-colors"
>
  <Sun id="sun-icon" className="h-5 w-5 text-gray-700 dark:text-gray-300 hidden dark:block animate-bounce " />
  <Moon id="moon-icon" className="h-5 w-5 text-gray-700 dark:text-gray-300 block dark:hidden animate-bounce" />
</button>

<script>
  // Theme toggle functionality
  const themeToggle = document.getElementById('theme-toggle');
  const htmlElement = document.documentElement;
  
  // Function to set the theme
  function setTheme(theme: 'light' | 'dark') {
    if (theme === 'dark') {
      htmlElement.classList.add('dark');
    } else {
      htmlElement.classList.remove('dark');
    }
    localStorage.setItem('theme', theme);
  }
  
  // Check for saved theme preference or use system preference
  const savedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null;
  const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
  
  // Set initial theme
  if (savedTheme) {
    setTheme(savedTheme);
  } else if (systemPrefersDark) {
    setTheme('dark');
  }
  
  // Toggle theme when button is clicked
  themeToggle?.addEventListener('click', () => {
    const isDark = htmlElement.classList.contains('dark');
    setTheme(isDark ? 'light' : 'dark');
  });
  
  // Listen for system theme changes
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
    if (!localStorage.getItem('theme')) {
      setTheme(e.matches ? 'dark' : 'light');
    }
  });
</script>
